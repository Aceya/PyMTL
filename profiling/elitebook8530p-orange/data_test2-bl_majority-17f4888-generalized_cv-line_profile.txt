[tadej@tlinux64 ERMRec]$ kernprof.py -l -v src/ERMRec/test.py
[2012-10-16 16:44:12] ERMRec.testing  INFO   : Optimized version of module 'generalized_cv' not found. Using pure Python version instead.
[2012-10-16 16:44:13] ERMRec          DEBUG  : Finished fold: 0, base learner: majority, learner: NoMerging in 0.09s
[2012-10-16 16:44:13] ERMRec.learning DEBUG  : Merged data has 154 attributes and 5291 examples.
[2012-10-16 16:44:13] ERMRec          DEBUG  : Finished fold: 0, base learner: majority, learner: MergeAll in 0.15s
[2012-10-16 16:44:45] ERMRec          DEBUG  : Finished fold: 0, base learner: majority, learner: ERM in 31.11s
[2012-10-16 16:44:45] ERMRec          DEBUG  : Finished fold: 1, base learner: majority, learner: NoMerging in 0.07s
[2012-10-16 16:44:45] ERMRec.learning DEBUG  : Merged data has 154 attributes and 5294 examples.
[2012-10-16 16:44:45] ERMRec          DEBUG  : Finished fold: 1, base learner: majority, learner: MergeAll in 0.13s
[2012-10-16 16:45:16] ERMRec          DEBUG  : Finished fold: 1, base learner: majority, learner: ERM in 31.22s
[2012-10-16 16:45:16] ERMRec          DEBUG  : Finished fold: 2, base learner: majority, learner: NoMerging in 0.08s
[2012-10-16 16:45:16] ERMRec.learning DEBUG  : Merged data has 154 attributes and 5298 examples.
[2012-10-16 16:45:16] ERMRec          DEBUG  : Finished fold: 2, base learner: majority, learner: MergeAll in 0.12s
[2012-10-16 16:45:48] ERMRec          DEBUG  : Finished fold: 2, base learner: majority, learner: ERM in 31.66s
[2012-10-16 16:45:48] ERMRec          DEBUG  : Finished fold: 3, base learner: majority, learner: NoMerging in 0.07s
[2012-10-16 16:45:48] ERMRec.learning DEBUG  : Merged data has 154 attributes and 5308 examples.
[2012-10-16 16:45:48] ERMRec          DEBUG  : Finished fold: 3, base learner: majority, learner: MergeAll in 0.12s
[2012-10-16 16:46:18] ERMRec          DEBUG  : Finished fold: 3, base learner: majority, learner: ERM in 30.17s
[2012-10-16 16:46:18] ERMRec          DEBUG  : Finished fold: 4, base learner: majority, learner: NoMerging in 0.07s
[2012-10-16 16:46:18] ERMRec.learning DEBUG  : Merged data has 154 attributes and 5313 examples.
[2012-10-16 16:46:19] ERMRec          DEBUG  : Finished fold: 4, base learner: majority, learner: MergeAll in 0.12s
[2012-10-16 16:46:51] ERMRec          DEBUG  : Finished fold: 4, base learner: majority, learner: ERM in 32.13s
Wrote profile results to test.py.lprof
Timer unit: 1e-06 s

File: /home/tadej/Workspace/ERMRec/src/ERMRec/learning/generalized_cv_py.py
Function: generalized_cross_validation_part at line 24
Total time: 120.545 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    24                                           @profile
    25                                           def generalized_cross_validation_part(learner, data1, data2, cv_indices1):
    26                                               """Perform one part of the generalized version of the cross-validation
    27                                               testing method on the given data sets.
    28                                               Perform cross-validation over data set data1. For each fold of data1,
    29                                               build models on the remaining folds of data1, the whole data set data2 and
    30                                               the merged data set and test them on the selected fold of data1.
    31                                               Return a tuple (pred_errs1, pred_errs2, pred_errsm), where:
    32                                                   pred_errs1 -- list of prediction errors of the model built on the
    33                                                       remaining folds of data1 for instances in data1
    34                                                   pred_errs2 -- list of prediction errors of the model built on the whole
    35                                                       data set data2 for instances in data1
    36                                                   pred_errm -- list of prediction errors of the model built on the merged
    37                                                       data set for instances in data1
    38                                               
    39                                               Arguments:
    40                                               learner -- Orange learner
    41                                               data1 -- Orange data table representing the first data set
    42                                               data2 -- Orange data table representing the second data set
    43                                               cv_indices1 -- Orange LongList with indices for performing cross-validation
    44                                                   over data1
    45                                               
    46                                               """
    47      3952        15775      4.0      0.0      n1 = len(data1)
    48      3952        89986     22.8      0.1      folds = max(cv_indices1) + 1
    49                                               # prediction errors of models computed as:
    50                                               # 1 - P_model(predicted_class == true_class)
    51      3952        48312     12.2      0.0      pred_errs1 = [None]*n1
    52      3952        14589      3.7      0.0      pred_errs2 = [None]*n1
    53      3952        13231      3.3      0.0      pred_errsm = [None]*n1
    54                                               # build a model on data2
    55                                               # Note: The model does not change throughout cross-validation on data1
    56      3952       140346     35.5      0.1      model2 = learner(data2)
    57                                               # perform generalized cross-validation on data1
    58     23712        65229      2.8      0.1      for fold in range(folds):
    59                                                   # create testing data table for the current fold
    60     19760       324091     16.4      0.3          test = data1.select_ref(cv_indices1, fold)
    61   3749150     10945555      2.9      9.1          test_ids = [i for i, _ in enumerate(data1) if cv_indices1[i] == fold]
    62                                                   # create learning data tables for the current fold
    63     19760       409646     20.7      0.3          learn1 = data1.select_ref(cv_indices1, fold, negate=True)
    64     19760     62921783   3184.3     52.2          learnm = Orange.data.Table(learn1[:] + data2[:])
    65                                                   # build models
    66     19760      1065043     53.9      0.9          model1 = learner(learn1)
    67     19760      1024035     51.8      0.8          modelm = learner(learnm)
    68                                                   # test models on examples in the testing data table
    69    765638      2480355      3.2      2.1          for ex, id in zip(test, test_ids):
    70                                                       # hide actual class to prevent cheating
    71    745878      7678064     10.3      6.4              test_ex = Orange.data.Instance(ex)
    72    745878      2627195      3.5      2.2              test_ex_cls = test_ex.get_class()
    73    745878      3010556      4.0      2.5              test_ex.set_class('?')
    74                                                       # predict the class of test_ex and update prediction errors lists
    75    745878      2096579      2.8      1.7              prob = Orange.classification.Classifier.GetProbabilities
    76    745878      6500910      8.7      5.4              probs = model1(test_ex, result_type=prob)
    77    745878      2626471      3.5      2.2              pred_errs1[id] = (1 - probs[test_ex_cls])
    78    745878      5771434      7.7      4.8              probs = model2(test_ex, result_type=prob)
    79    745878      2477045      3.3      2.1              pred_errs2[id] = (1 - probs[test_ex_cls])
    80    745878      5706389      7.7      4.7              probs = modelm(test_ex, result_type=prob)
    81    745878      2482738      3.3      2.1              pred_errsm[id] = (1 - probs[test_ex_cls])
    82      3952         9311      2.4      0.0      return pred_errs1, pred_errs2, pred_errsm

[tadej@tlinux64 ERMRec]$
